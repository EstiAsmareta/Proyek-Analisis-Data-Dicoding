# -*- coding: utf-8 -*-
"""Proyek Analisis Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bRiRdzxxBMxqYFllhXdAcjh6LJDrL8Fu

# Proyek Analisis Data: Bike Sharing Dataset
- **Nama:** Esti Asmareta Ayu
- **Email:** asmaretaayu@gmail.com
- **ID Dicoding:** m189d4kx2120

## Menentukan Pertanyaan Bisnis

Pertanyaan 1 :Penyewaan sepeda paling banyak pada musim apa?
Pertanyaan 2 : Bagaimana peningkatan jumlah penyewa terdafta dan jumlah penyewa biasa sepanjang tahun 2012?

## Import Semua Packages/Library yang Digunakan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import drive
drive.mount('/content/gdrive')

import os
os.environ['KAGGLE_CONFIG_DIR'] = "/content/gdrive/My Drive/Kaggle"
# /content/gdrive/My Drive/Kaggle is the path where kaggle.json is present in the Google Drive

# Commented out IPython magic to ensure Python compatibility.
#changing the working directory
# %cd /content/gdrive/My Drive/Kaggle.json
#Check the present working directory using pwd command

"""## Data Wrangling

# Gathering Data

**Gathering Data**. Pada Tahapan ini saya melakukan pengambilan data dengan mengambil dataset Bike Sharing Dataset dari ke-3 dataset yang dapat dipergunakan. Dataset tersebut berasal dari link Drive yang kemudia saya unduh.

terdapat 2 buah tabel yaitu,
- Tabel day
- Tabel hour

# Asseing Data

**Assesing Data** Tabel day.csv
"""

day_df = pd.read_csv("/content/sample_data/day.csv")
day_df.head()

day_df.info()

"""Dari info yang diberikan, tidak terdapat keanehan pada tabel day.csv. Terlihat bahwa setiap kolom memiliki jumlah record data yang sama tetapi kolom dteday memiliki tipe data yang salah.

"""

day_df.isna().sum()

"""Proses ini untuk melihat apakah terdapat missing value pada tabel day.csv. Terlihat bahwa sesuai dengan info yang diberikan di atas, tidak terdapat missing value."""

print("Jumlah duplikat : ", day_df.duplicated().sum())

day_df.describe()

"""Analisis kualitas data menunjukan bahwa data day.csv memiliki kualitas yang cukup baik dengan tidak lagi ditemukannya masalah-masalah seperti missing value, duplikat data, value yang tidak akurat namun terdapat masalah tipe data yang keliru.

**Assesing Data** tabel hour.csv
"""

hour_df = pd.read_csv("/content/sample_data/hour.csv")
hour_df.head()

hour_df.info()

"""Dari informasi yang diberikan setiap record data memiliki jumlah yang sama namun terdapat kesalahan tipe data pada kolom dteday."""

hour_df.isna().sum()

"""Dari Output di atas terlihat bahwa tidak adanya missing value pada setiap kolom"""

print("Jumlah duplikat : ",hour_df.duplicated().sum())

hour_df.describe()

"""Analisis kualitas data menunjukan bahwa hour day.csv memiliki kualitas yang cukup baik dengan tidak  ditemukannya masalah-masalah seperti missing value, duplikat data, value yang tidak akurat namun terdapat masalah pada tipe data yang keliru.

### Cleaning Data

**Cleaning Data** tabel day.csv
"""

day_df['dteday'] = pd.to_datetime(day_df['dteday'])
day_df.info()

"""Proses di atas dilakukan untuk mengubah tipe data kolom dteday yang semula bertipe data object menjadi tipe data yang sesuai yaitu datetime."""

hour_df["dteday"] = pd.to_datetime(hour_df["dteday"])
hour_df.info()

"""Proses di atas dilakukan untuk mengubah tipe data kolom dteday yang semula bertipe data object menjadi tipe data yang sesuai yaitu datetime.

## Exploratory Data Analysis (EDA)

### Explore

Dalam proses ini dilakukan analisis terhadap data guna memperoleh insight dan menjawab pertanyaan analisis. Untuk menemukan pola serta hubungan maka analisis dilakukan dengan melihat deskripsi data tersebih dahulu.
"""

day_df.describe(include = "all")

hour_df.describe(include = "all")

"""Dari deskripsi kedua tabel di atas terlihat pola yang dapat menjawab 2 pertanyaan analisis sebelumnya. Pada tabel day.csv, kolom season memiliki nilai minimun 1 (musim semi), nilai maksimum 4 (musim dingin) dengan 75% dari keseluruhan data pada kolom season bernilai 3 (musim gugur). Pada kolom casual memiliki nilai minimum 2.000.000 dan nilai maksimum 3410.000.000, sedangkan kolom registered memiliki nilai minimum 22.000.000 dan nilai maksimum 8714.000.000."""

day_df.groupby(by="season").cnt.sum().sort_values(ascending=False)

"""Dilakukan analisis lebih lanjut untuk mengetahui detail jumlah penyewaan sepeda di tiap musimnya. Ini dilakukan dengan mengelompokan kolom season kemudian tiap kelompok kolom season akan menjumlahkan nilai pada kolom cnt (jumlah keseluruhan penyewa). Pada output yang diberikan terlihat bahwa nilai 3 pada kolom season berada pada urutan teratas di ikuti dengan nilai 2, 4, dan 1. Hal ini telah menjawab pertanyaan 1."""

registered_frequency = day_df[day_df['yr'] == 1].groupby(by=["mnth"]).registered.sum()
print(registered_frequency)

"""Dalam menjawab pertanyaan 2, perlu menganalisis hubungan antar kolom registered dan casual dengan kolom bulan dan tahun. Pertama, analisis kolom registered dengan mengambil data dengan tahu 2012 dan mengelompokan kolom mnth sehingga diperoleh 12 bulan. Kemudian tiap kelompok mnth akan menjumlahkannilai pada kolom registered. Ouput yang terlihat seperti di atas. Data diurutkan berdasarkan bulan secara ascending untuk melihat peningkatan dan/ penurunan jumlah penyewa yang melakukan registrasi."""

casual_frequency = day_df[day_df['yr'] == 1].groupby(by=["mnth"]).casual.sum()
print(casual_frequency.sort_index(ascending=True))

"""Kedua, analisis hubungan kolom casual dilakukan sama seperti pada kolom registered.  Data diurutkan berdasarkan bulan secara ascending untuk melihat peningkatan dan/ penurunan jumlah penyewa yang tidak melakukan registrasi."""

# Filtering the DataFrame for rows where 'weathersit' is 4
weather_situation_4 = hour_df[hour_df['weathersit'] == 4]

# Grouping by 'season' and counting occurrences
most_frequent_season = weather_situation_4['season'].value_counts().idxmax()

print(f"The weather situation with value 4 occurs most frequently in the season: {most_frequent_season}")

"""## Visualization & Explanatory Analysis

### Pertanyaan 1:
"""

result = day_df.groupby(by="season").cnt.sum().reset_index()

season_mapping = {
    1: "Springer",
    2: "Summer",
    3: "Fall",
    4: "Winter"
}

result['season'] = result['season'].map(season_mapping)

sns.barplot(
    y="cnt",
    x="season",
    data=result.sort_values(by="season", ascending=False)
)
plt.title("Number of Bike Sharing by Season", loc="center", fontsize=15)
plt.ylabel(None)
plt.xlabel(None)
plt.tick_params(axis='x', labelsize=12)
plt.show()

"""Dari hasil proses EDA yang telah dilakukan, untuk melihat tingkat penyewaan sepeda di tiap musim divisualisasikan dengan menggunakan bar chart. Terlihat pada output, visualisasi dalam bentuk bar chart mempermudah dalam membaca dan menganalisis untuk menemukan insight menarik lainnya. Bar dengan label fall (gugur) merupakan bar tertinggi di ikuti bar summer dan bar winter yang memiliki perbedaan tipis berbeda dengan bar springer yang terlihat dibawah bar lainnya dengan perbedaan nilai cukup jauh.

Dari proses visualisasi pertanyaan 1, ditemukan bahwa bar springer memiliki jumlah penyewaan paling sedikit dan berjarak jauh dari 3 musim lainnya. Untuk itu pada tahapan explanatory, analisis dilakukan untuk mengetahui penyebab kurangnya jumlah penyewaan.
"""

weather_situation_4 = hour_df[hour_df['season'] == 1]

most_frequent_weathersit = weather_situation_4['weathersit'].value_counts()

most_frequent_workingday =  weather_situation_4['workingday'].value_counts()

print(f"In the springer season, the most frequent weather situation is:\n{most_frequent_weathersit}")
print(f"In the springer season, the most frequent workingday situation is:\n{most_frequent_workingday}")

"""Analisis di atas dilakukan dengan melihat pola kolom season dengan kolom weathersit dan workingday. Pada musim springer (musim dengan jumlah penyewaan terendah) cuaca 1 (cerah) hanya terjadi 2665 setiap jam selama tahun 2011-2012 akhir. juga terjadi 1205 jam cuaca berkabut, 369 cuaca salju dan terdapat 3 cuaca dengan kondisi Hujan Lebat + Palet Es + Badai Petir + Kabut, Salju + Kabut. Sementara itu frekuensi nilai 0 (libur) pada kolom workingday memiliki jumlah 2794 dan 1448 untuk nilai 1 (kerja)."""

# Mapping numerical values to meaningful names
weathersit_mapping = {
    1: "Clear",
    2: "Mist",
    3: "Light",
    4: "Fall"
}

# Creating an empty DataFrame to store the results
all_seasons_df = pd.DataFrame(columns=['Season', 'Weather Situation', 'Count'])

# Iterate over each season
for season in hour_df['season'].unique():
    # Filtering the DataFrame for rows where 'season' is the current season
    season_df = hour_df[hour_df['season'] == season]

    # Grouping by 'weathersit' and counting occurrences
    most_frequent_weathersit = season_df['weathersit'].value_counts().sort_index()

    # Creating a DataFrame for mapping
    weathersit_df = pd.DataFrame({
        'Season': [season] * len(most_frequent_weathersit),
        'Weather Situation': most_frequent_weathersit.index.map(weathersit_mapping),
        'Count': most_frequent_weathersit.values
    })

    # Appending the results to the main DataFrame
    all_seasons_df = all_seasons_df.append(weathersit_df, ignore_index=True)

# Creating a bar plot
plt.figure(figsize=(12, 6))
sns.barplot(
    x='Weather Situation',
    y='Count',
    hue='Season',
    data=all_seasons_df,
    palette='viridis'
)

# Adding title and adjusting appearance
plt.title("Number of Bike Sharing by Weather Situation in Each Season", loc="center", fontsize=15)
plt.xlabel("Weather Situation")
plt.ylabel("Count")
plt.tick_params(axis='x', labelsize=12)

# Displaying the plot
plt.show()

"""Group bar di atas menampilkan bagaimana musmim 3(semi) pada setiap cuaca tidak memiliki data yang benar-benar tinggi. Paca cuaca cerah, musim semi hanya memiliki"""

# Filtering the DataFrame for rows where 'season' is 4 (winter season)
winter_season_df = hour_df[hour_df['season'] == 2]

# Grouping by 'weathersit' and counting occurrences
most_frequent_weathersit = winter_season_df['weathersit'].value_counts()

# Mapping numerical values to meaningful names
weathersit_mapping = {
    1: "Clear",
    2: "Mist",
    3: "Light",
    4: "Fall"
}

# Creating a DataFrame for mapping
weathersit_df = pd.DataFrame({
    'Weather Situation': most_frequent_weathersit.index.map(weathersit_mapping),
    'Count': most_frequent_weathersit.values
})

# Creating a bar plot
sns.barplot(
    x='Weather Situation',
    y='Count',
    data=weathersit_df
)

# Adding title and adjusting appearance
plt.title("Number of Bike Sharing by Weather Situation in Winter Season", loc="center", fontsize=15)
plt.xlabel("Weather Situation")
plt.ylabel("Count")
plt.tick_params(axis='x', labelsize=12)

# Displaying the plot
plt.show()

"""### Pertanyaan 2:"""

# Filtering the DataFrame for rows where 'yr' is equal to 1
filtered_df = day_df[day_df['yr'] == 1]

# Grouping by "mnth" and calculating the sum of "casual" and "registered" columns
monthly_totals = filtered_df.groupby(by=["mnth"]).agg({
    'registered': 'sum',
    'casual': 'sum'
}).reset_index()

# Creating a line chart for both casual and registered frequencies
plt.figure(figsize=(10, 6))
plt.plot(monthly_totals['mnth'], monthly_totals['casual'], label='Casual', marker='o')
plt.plot(monthly_totals['mnth'], monthly_totals['registered'], label='Registered', marker='o')

# Adding title and labels
plt.title("Monthly Casual and Registered Frequencies", fontsize=15)
plt.xlabel("Month")
plt.ylabel("Frequency")

# Adding legend
plt.legend()

# Displaying the plot
plt.show()

"""Visualisasi hasil EDA pertanyaan 2 tergambar dengan jelas melalui line chart di atas. Sepanjang tahun 2012 jumlah penyewa yang terdaftar meningkat mulai bulan ke-2 dan terus naik hingga bulan ke-9. Namun penurusan mulai terjadi pada bulan ke-10 hingga akhir tahun. Hampir sama dengan jumlah penyewa yang tidak terdaftar. Peningkatan dimulai pada bulan ke-2 dan mulai turun pada bulan ke-10

## Conclusion

- Conclution pertanyaan 1 : Dari proses analisis data yang dilakukan didapati jawaban bahwa penyewaan sepeda tertinggi ada pada musim gugur dengan 1061129 penyewa.
- Conclution pertanyaan 2 : Dari proses analisis data yang dilakukan didapati jawaban bahwa peningkatan jumlah penyewaan dari penyewa terdaftar dan penyewa baiasa terbilang sama yaitu, meningkat mulai bulan ke-2  hingga ke-9 dan turun mulai bulan ke-10 hingga akhir tahun. Pada penyewa terdaftar peningkatan paling tajam terjadi pada rentang bulan ke-2 dan ke-3 dengan kenaikan lebih dari 25000 sementara pada penyewa biasa meningkat lebih dari 10000.
"""